{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Progress/index.tsx","pages/Progress/index.tsx"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","Progress","props","type","color","width","useState","lineWidth","setLineWieth","circlePerimeter","setCirclePerimeter","percentage","setPercentage","oldPercentage","setOldPercentage","useEffect","Math","PI","className","style","height","id","cx","cy","r","fill","stroke","strokeWidth","strokeLinecap","strokeDasharray","strokeDashoffset","attributeName","attributeType","to","dur","x1","y1","x2","y2","ProgressPage","autoPercentage","setAutoPercentage","addPercentage","setAddPercentage","num","window","timer","setInterval","floor","random","clearInterval","marginTop","onClick"],"mappings":"oHAAe,SAASA,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAE/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAC9CC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,ECHM,SAASE,EAAeN,EAAKG,GAC1C,OCLa,SAAyBH,GACtC,GAAIK,MAAME,QAAQP,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKG,GACjD,GAAsB,qBAAXK,QAA4BA,OAAOC,YAAYC,OAAOV,GAAjE,CACA,IAAIW,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKjB,EAAIQ,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETlB,GAAKQ,EAAKT,SAAWC,GAH8CS,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBX,EAAKG,IGJ3C,SAAqCoB,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,EAAiBA,EAAGC,GACtD,IAAIC,EAAIf,OAAOgB,UAAUC,SAASC,KAAKL,GAAGM,MAAM,GAAI,GAEpD,MADU,WAANJ,GAAkBF,EAAEO,cAAaL,EAAIF,EAAEO,YAAYC,MAC7C,QAANN,GAAqB,QAANA,EAAoBpB,MAAM2B,KAAKT,GACxC,cAANE,GAAqB,2CAA2CQ,KAAKR,GAAW,EAAiBF,EAAGC,QAAxG,GHF8D,CAA2BxB,EAAKG,IILjF,WACb,MAAM,IAAI+B,UAAU,6IJIgF,G,0JK2IvFC,G,OAtIoB,SAACC,GAAmB,IAC7CC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACRC,EAAQH,EAAMG,OAAS,IAFuB,EAGlBC,mBAAiB,GAHC,mBAG7CC,EAH6C,KAGlCC,EAHkC,OAINF,mBAAiB,GAJX,mBAI7CG,EAJ6C,KAI5BC,EAJ4B,OAKhBJ,mBAAiB,GALD,mBAK7CK,EAL6C,KAKjCC,EALiC,OAMVN,mBAAiB,GANP,mBAM7CO,EAN6C,KAM9BC,EAN8B,KAsCpD,OA9BAC,qBAAU,WACJZ,EAEFO,EAAqB,EAAIL,EAAS,EAAKW,KAAKC,IAG5CT,EAAaH,EAAQ,MAEtB,CAACF,EAAME,IAEVU,qBAAU,WACJb,EAAMS,aAAeA,IACvBG,EAAiBH,GACjBC,EAAcV,EAAMS,eAErB,CAACT,EAAMS,WAAYA,IAgBpB,qBAAKO,UAAU,WAAf,SACGf,EACC,sBAAKe,UAAU,aAAaC,MAAO,CAAEd,MAAOA,EAAOe,OAAQf,GAA3D,UACE,sBAAsBgB,GAAG,SAAShB,MAAOA,EAAOe,OAAQf,EAAxD,UACE,wBACEiB,GAAIjB,EAAQ,EACZkB,GAAIlB,EAAQ,EACZmB,EAAI,EAAInB,EAAS,EACjBoB,KAAK,OACLC,OAAO,UACPC,YAAY,OAEd,wBACEL,GAAIjB,EAAQ,EACZkB,GAAIlB,EAAQ,EACZmB,EAAI,EAAInB,EAAS,EACjBoB,KAAK,OACLC,OAAQtB,EACRuB,YAAY,KACZC,cAAc,QACdC,gBAAiBpB,EACjBqB,iBACEjB,EACIJ,GAAmB,EAAII,EAAgB,KACvCJ,EAZR,SAekB,IAAfE,EACC,yBACEoB,cAAc,oBACdC,cAAc,MACdlC,KACEe,EACIJ,GAAmB,EAAII,EAAgB,KACvCJ,EAENwB,GAAIxB,GAAmB,EAAIE,EAAa,KACxCuB,IAAI,KACJT,KAAK,WAEL,SArCEd,GAwCV,gCAAMA,EAAN,UAGA,sBAAKO,UAAU,WAAWC,MAAO,CAAEd,MAAOA,EAAOe,OAAQ,IAAzD,UACE,sBAAsBf,MAAOA,EAAOe,OAAO,KAA3C,UACE,sBACEe,GAAG,KACHC,GAAG,KACHC,GAAIhC,EAAQ,GACZiC,GAAG,KACHb,KAAK,OACLE,YAAY,KACZD,OAAO,UACPE,cAAc,UAEhB,sBACEO,GAAG,KACHC,GAAG,KACHC,GAAIhC,EAAQ,GACZiC,GAAG,KACHb,KAAK,OACLE,YAAY,KACZD,OAAQtB,EACRwB,cAAc,QACdC,gBAAiBtB,EACjBuB,iBACEjB,EACIN,GAAa,EAAIM,EAAgB,KACjCN,EAbR,SAgBE,yBACEwB,cAAc,oBACdC,cAAc,MACdlC,KACEe,EACIN,GAAa,EAAIM,EAAgB,KACjCN,EAEN0B,GAAI1B,GAAa,EAAII,EAAa,KAClCuB,IAAI,KACJT,KAAK,eArCDd,GAyCV,gCAAMA,EAAN,c,OC/EG4B,UAnDgB,WAAO,IAAD,EAECjC,mBAAS,IAFV,mBAE5BK,EAF4B,KAEhBC,EAFgB,OAGSN,mBAAS,IAHlB,mBAG5BkC,EAH4B,KAGZC,EAHY,OAIOnC,mBAAS,IAJhB,mBAI5BoC,EAJ4B,KAIbC,EAJa,KAMnC5B,qBAAU,WACR,IAAI6B,EAAM,GASV,OAPAC,OAAOC,MAAQC,aAAY,WACzBH,GAAO,GACPH,EAAkBzB,KAAKgC,MAAsB,IAAhBhC,KAAKiC,SAAiB,IACnDN,EAAiBC,GACT,MAARA,IAAgBA,EAAM,KACrB,MAEI,WACLM,cAAcL,OAAOC,UAEtB,IAOH,OACE,sBAAKzB,GAAG,eAAR,UACE,qBAAKH,UAAU,QAAf,4CACA,sBAAKA,UAAU,OAAf,UACE,cAAC,EAAD,CAAUf,KAAK,SAASQ,WAAY6B,EAAgBpC,MAAM,QAC1D,cAAC,EAAD,CAAUD,KAAK,SAASQ,WAAY+B,EAAetC,MAAM,WACzD,cAAC,EAAD,CAAUD,KAAK,SAASQ,WAAYA,EAAYP,MAAM,WACtD,cAAC,EAAD,CAAUD,KAAK,SAASQ,WAAYA,EAAYP,MAAM,UACtD,cAAC,EAAD,CAAUD,KAAK,SAASQ,WAAYA,EAAYP,MAAM,YACtD,cAAC,EAAD,CAAUD,KAAK,SAASQ,WAAYA,EAAYP,MAAM,SACtD,cAAC,EAAD,CAAUD,KAAK,SAASQ,WAAYA,EAAYP,MAAM,cAExD,qBAAKc,UAAU,QAAQC,MAAO,CAAEgC,UAAW,QAA3C,kDACA,qBAAKjC,UAAU,OAAf,SACE,gCACE,cAAC,EAAD,CAAUP,WAAY,GAAIP,MAAM,YAChC,cAAC,EAAD,CAAUO,WAAY+B,EAAetC,MAAM,OAAOC,MAAO,MACzD,cAAC,EAAD,CAAUM,WAAYA,EAAYP,MAAM,UAAUC,MAAO,MACzD,cAAC,IAAD,CAAQF,KAAK,UAAUiD,QAtBN,WACvBxC,EAAcI,KAAKgC,OAAM,GAAAhC,KAAKiC,SAAuB,OAqB/C","file":"static/js/7.de0c993b.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect } from \"react\";\nimport \"./index.less\";\n\ninterface Iprops {\n  type?: string,\n  percentage: number,\n  color?: string,\n  width?: number\n}\n\nconst Progress: React.FC<Iprops> = (props: Iprops) => {\n  const { type, color } = props\n  const width = props.width || 200\n  const [lineWidth, setLineWieth] = useState<number>(0)\n  const [circlePerimeter, setCirclePerimeter] = useState<number>(0)\n  const [percentage, setPercentage] = useState<number>(0)\n  const [oldPercentage, setOldPercentage] = useState<number>(0)\n\n  useEffect(() => {\n    if (type) {\n      // 圆的周长 2πr 2r =  3 * width / 4\n      setCirclePerimeter(((3 * width) / 4) * Math.PI)\n    } else {\n      // line 的长度是 svg 的长度 - 60\n      setLineWieth(width - 60)\n    }\n  }, [type, width])\n\n  useEffect(() => {\n    if (props.percentage !== percentage) {\n      setOldPercentage(percentage)\n      setPercentage(props.percentage)\n    }\n  }, [props.percentage, percentage])\n\n  // circle 中 cx cy 圆心 r 半径\n  // line 中 x1 属性在 x 轴定义线条的开始\n  // y1 属性在 y 轴定义线条的开始\n  // x2 属性在 x 轴定义线条的结束\n  // y2 属性在 y 轴定义线条的结束\n  // stroke-dasharray 虚线\n  // stroke-dashoffset 周长(线的长度)为 100 进度为 80 那么 stroke-dashoffset = 100 * (100 - 80) / 100 = 20 就可以绘制进度 80 的圆环(直线)\n  // animate 是控制动画的\n  // percentage 从 80 变为 60 svg 先渲染为 0 到 80 stroke-dashoffset 再从 80 的值往新的 60 的值变化\n  // stroke-dashoffset = 周长 * (100 - 进度) / 100\n  // 环形进度条时 当进度为 0 要取消动画 不然 当宽度在大概 270 ~ 500 范围内 初始化为 0 会多出一点进度\n\n  // svg 标签添加 key 属性 每次 render 时 key 的值变化 react 先销毁该组件(元素)(有状态组件的 componentWillUnmount 会执行)，然后重新创建该组件\n  return (\n    <div className=\"progress\">\n      {type ? (\n        <div className=\"circleWrap\" style={{ width: width, height: width }}>\n          <svg key={percentage} id=\"circle\" width={width} height={width}>\n            <circle\n              cx={width / 2}\n              cy={width / 2}\n              r={(3 * width) / 8}\n              fill=\"none\"\n              stroke=\"#e8e8e8\"\n              strokeWidth=\"12\"\n            />\n            <circle\n              cx={width / 2}\n              cy={width / 2}\n              r={(3 * width) / 8}\n              fill=\"none\"\n              stroke={color}\n              strokeWidth=\"12\"\n              strokeLinecap=\"round\"\n              strokeDasharray={circlePerimeter}\n              strokeDashoffset={\n                oldPercentage\n                  ? circlePerimeter * (1 - oldPercentage / 100)\n                  : circlePerimeter\n              }\n            >\n              {percentage !== 0 ? (\n                <animate\n                  attributeName=\"stroke-dashoffset\"\n                  attributeType=\"XML\"\n                  from={\n                    oldPercentage\n                      ? circlePerimeter * (1 - oldPercentage / 100)\n                      : circlePerimeter\n                  }\n                  to={circlePerimeter * (1 - percentage / 100)}\n                  dur=\"1s\"\n                  fill=\"freeze\"\n                />\n              ) : null}\n            </circle>\n          </svg>\n          <div>{percentage}%</div>\n        </div>\n      ) : (\n          <div className=\"lineWrap\" style={{ width: width, height: 20 }}>\n            <svg key={percentage} width={width} height=\"20\">\n              <line\n                x1=\"10\"\n                y1=\"10\"\n                x2={width - 50}\n                y2=\"10\"\n                fill=\"none\"\n                strokeWidth=\"12\"\n                stroke=\"#e8e8e8\"\n                strokeLinecap=\"round\"\n              />\n              <line\n                x1=\"10\"\n                y1=\"10\"\n                x2={width - 50}\n                y2=\"10\"\n                fill=\"none\"\n                strokeWidth=\"12\"\n                stroke={color}\n                strokeLinecap=\"round\"\n                strokeDasharray={lineWidth}\n                strokeDashoffset={\n                  oldPercentage\n                    ? lineWidth * (1 - oldPercentage / 100)\n                    : lineWidth\n                }\n              >\n                <animate\n                  attributeName=\"stroke-dashoffset\"\n                  attributeType=\"XML\"\n                  from={\n                    oldPercentage\n                      ? lineWidth * (1 - oldPercentage / 100)\n                      : lineWidth\n                  }\n                  to={lineWidth * (1 - percentage / 100)}\n                  dur=\"1s\"\n                  fill=\"freeze\"\n                />\n              </line>\n            </svg>\n            <div>{percentage}%</div>\n          </div>\n        )}\n    </div>\n  );\n}\n\nexport default Progress\n","import React, { useState, useEffect } from \"react\";\nimport { Button } from \"antd\";\nimport Progress from \"@components/Progress\";\nimport \"./index.less\";\n\ndeclare var window: Window & { timer: any }\n\nconst ProgressPage: React.FC = () => {\n\n  const [percentage, setPercentage] = useState(80)\n  const [autoPercentage, setAutoPercentage] = useState(66)\n  const [addPercentage, setAddPercentage] = useState(10)\n\n  useEffect(() => {\n    let num = 10\n\n    window.timer = setInterval(() => {\n      num += 10;\n      setAutoPercentage(Math.floor(Math.random() * 100 + 1))\n      setAddPercentage(num)\n      num === 100 && (num = 0)\n    }, 1500);\n\n    return () => {\n      clearInterval(window.timer); // 必须清除定时器\n    }\n  }, [])\n\n\n  const changePercentage = () => {\n    setPercentage(Math.floor(Math.random() * (1 - 100) + 100))\n  }\n\n  return (\n    <div id=\"ProgressPage\">\n      <div className=\"title\">环形进度条</div>\n      <div className=\"wrap\">\n        <Progress type=\"circle\" percentage={autoPercentage} color=\"red\" />\n        <Progress type=\"circle\" percentage={addPercentage} color=\"orange\" />\n        <Progress type=\"circle\" percentage={percentage} color=\"yellow\" />\n        <Progress type=\"circle\" percentage={percentage} color=\"green\" />\n        <Progress type=\"circle\" percentage={percentage} color=\"skyblue\" />\n        <Progress type=\"circle\" percentage={percentage} color=\"blue\" />\n        <Progress type=\"circle\" percentage={percentage} color=\"purple\" />\n      </div>\n      <div className=\"title\" style={{ marginTop: \"40px\" }}>直线型进度条</div>\n      <div className=\"wrap\">\n        <div>\n          <Progress percentage={48} color=\"#ff520e\" />\n          <Progress percentage={addPercentage} color=\"gold\" width={250} />\n          <Progress percentage={percentage} color=\"skyblue\" width={300} />\n          <Button type=\"primary\" onClick={changePercentage}>更改进度</Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProgressPage;\n"],"sourceRoot":""}