{"version":3,"sources":["components/FormWrapperStyles/index.tsx","components/ListTemplate/Filter/index.tsx","components/ListTemplate/index.tsx","pages/OrderManage/index.tsx"],"names":["FormWrapper","styled","div","parent","pseudoSelector","clear","content","display","clearfix","FormItemWrapper","props","floatDirection","margin","labelWidth","RangePicker","DatePicker","MonthPicker","Option","Select","CheckboxGroup","Checkbox","Group","useState","React","useEffect","FormContainer","Filter","filterArr","onSearch","filterRender","searchParams","renderFilterArr","setRenderFilterArr","visible","setVisible","checkedList","setCheckedList","checkAll","setCheckAll","indeterminate","setIndeterminate","Form","useForm","form","cloneDeep","filter","item","isHide","getField","type","placeholder","autoComplete","style","width","selectOption","showSearch","allowClear","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","mode","multiple","map","i","value","label","showTime","format","disabledDate","hideFilterArr","marginBottom","justifyContent","length","className","onClick","title","onOk","arr","forEach","push","message","warning","onCancel","onChange","e","target","checked","disabled","gutter","span","ref","myRef","onFinish","fieldsValue","params","name","filterName","includes","undefined","Object","keys","JSON","stringify","deleteEmptyKey","initialValues","Item","render","getFields","textAlign","htmlType","marginLeft","resetFields","StyledContainer","ListTemplate","columns","isShowExport","handleExport","loading","dataSource","getFilter","getPagination","rowKey","pagination","hideColumnsArr","renderColumns","setRenderColumns","copyRenderColumns","columnsKey","column","key","bordered","current","pageSize","total","useMemo","useRef","OrderManage","setFilterArr","orderData","useSelector","selectOrderData","dispatch","useDispatch","tableData","initialValue","dataIndex","id","rel","href","console","log","updateSearchParams","order_no","create_time","moment","order_date","order_start_date","order_end_date","updatePagination","address","updateTableData"],"mappings":"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","file":"static/js/11.41c5027b.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nfunction clearfix(parent = \"&\"): any {\n  const pseudoSelector = `${parent}::after`;\n  return {\n    [pseudoSelector]: {\n      clear: \"both\",\n      content: '\"\"',\n      display: \"table\",\n    },\n  };\n}\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n  ${clearfix()}\n`;\ntype FormItemWrapperProps = {\n  margin?: any;\n  floatDirection?: string;\n  labelWidth?: string;\n};\n\nexport const FormItemWrapper = styled.div`\n  float: ${(props: FormItemWrapperProps) => props.floatDirection || \"left\"};\n  margin: ${(props: FormItemWrapperProps) => props.margin || \"0 14px\"};\n  .ant-form-item-label label {\n    display: inline-block;\n    width: ${(props: FormItemWrapperProps) => props.labelWidth || \"100px\"};\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n  }\n`;\n","import * as React from 'react'\nimport { Form, Input, Button, Select, DatePicker, Row, Col, Modal, Checkbox, message } from 'antd'\nimport { IconfigArr } from '../interface'\nimport styled from 'styled-components';\nimport { cloneDeep } from 'lodash';\nimport { FormWrapper, FormItemWrapper } from \"@components/FormWrapperStyles\";\n\nconst { RangePicker, MonthPicker } = DatePicker\nconst Option = Select.Option\nconst CheckboxGroup = Checkbox.Group;\nconst { useState, useEffect } = React;\n\nconst FormContainer = styled.div`\n  background: #fff;\n  .filterBtn {\n    float: right;\n    cursor: pointer;\n    color: #00a0e9;\n    font-weight: bold;\n  }\n  .ant-advanced-search-form {\n    .ant-form-item {\n      display: flex;\n      margin-bottom: 15px;\n    }\n    .btnWrap {\n      display: flex;\n      justify-content: flex-end;\n    }\n  }\n`;\n\ninterface Iprops {\n  filterArr: IconfigArr[],\n  onSearch: any\n  filterRender: any\n  myRef: any\n  searchParams: any\n}\n\nconst Filter: React.FC<Iprops> = (props: Iprops) => {\n\n  const { filterArr, onSearch, filterRender, searchParams } = props\n  const [renderFilterArr, setRenderFilterArr] = useState<Array<any>>([])\n  const [visible, setVisible] = useState<boolean>(false)\n  const [checkedList, setCheckedList] = useState<Array<string>>([])\n  const [checkAll, setCheckAll] = useState<boolean>(false)\n  const [indeterminate, setIndeterminate] = useState<boolean>(false)\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    setRenderFilterArr(cloneDeep(filterArr).filter((item: any) => !item.isHide))\n  }, [filterArr])\n\n  const getField = (item: any) => {\n    switch (item.type) {\n      case 'Input':\n        return (\n          <Input\n            placeholder={item.placeholder}\n            autoComplete=\"off\"\n            style={{ width: 200 }}\n          />\n        )\n      case 'Select':\n        return (\n          item.selectOption && (\n            <Select\n              showSearch\n              allowClear\n              optionFilterProp=\"children\"\n              filterOption={(input, option: any) =>\n                option.props.children\n                  .toLowerCase()\n                  .indexOf(input.toLowerCase()) >= 0\n              }\n              style={{ width: 200 }}\n              mode={item.multiple && 'multiple'} // 是否多选\n              placeholder={item.placeholder}\n            >\n              {item.selectOption.map((item: any, i: number) => (\n                <Option value={item.value} key={i}>\n                  {item.label}\n                </Option>\n              ))}\n            </Select>\n          )\n        )\n      case 'DatePicker':\n        return (\n          <DatePicker\n            style={{ width: 200 }}\n            placeholder={item.placeholder}\n            showTime={item.showTime ? { format: 'HH:mm' } : false}\n            format={item.format || 'YYYY-MM-DD'}\n            disabledDate={item.disabledDate || null}\n          />\n        )\n      case 'RangePicker':\n        return (\n          <RangePicker\n            style={{ width: item.showTime ? 300 : 240 }}\n            showTime={item.showTime ? { format: 'HH:mm' } : false}\n            format={item.format || 'YYYY-MM-DD'}\n            disabledDate={item.disabledDate || null}\n          />\n        )\n      case 'MonthPicker':\n        return (\n          <MonthPicker\n            style={{ width: 200 }}\n            placeholder={item.placeholder}\n            format={item.format || 'YYYY-MM'}\n            disabledDate={item.disabledDate || null}\n          />\n        )\n      default:\n        return null\n    }\n  }\n\n  const getFields = (renderFilterArr: any[]) => {\n    const children: any = []\n    renderFilterArr.forEach((item: any, i: number) => {\n      children.push(\n        <FormItemWrapper key={i} labelWidth=\"80px\">\n          <Form.Item label={item.label} name={item.name}>\n            {item.render ? item.render : getField(item)}\n          </Form.Item>\n        </FormItemWrapper>\n      )\n    })\n    return children\n  }\n\n  const handleSearch = (fieldsValue: any) => {\n    const params: any = {}\n    renderFilterArr.forEach(item => {\n      const { name, type, format, filterName } = item\n      if (type && type.includes('Picker')) {\n        if (type === 'DatePicker') {\n          params[name] = fieldsValue[name] ? fieldsValue[name].format(format || 'YYYYMMDD') : undefined\n        }\n        if (type === 'RangePicker' && filterName && fieldsValue[name]) {\n          params[filterName[0]] = fieldsValue[name][0].format(format || 'YYYYMMDD')\n          params[filterName[1]] = fieldsValue[name][1].format(format || 'YYYYMMDD')\n        }\n        if (type === 'MonthPicker') {\n          params[name] = fieldsValue[name] ? fieldsValue[name].format('YYYYMM') : undefined\n        }\n      } else {\n        params[name] = fieldsValue[name]\n      }\n    })\n    const deleteEmptyKey = (params: any) => {\n      Object.keys(params).forEach((e) => {\n        if (params[e] === '' || params[e] === null || params[e] === undefined || JSON.stringify(params[e]) === '{}' ||\n          JSON.stringify(params[e]) === '[]') {\n          delete params[e];\n        }\n      });\n    }\n    deleteEmptyKey(params)\n    onSearch(params)\n  }\n\n  const handleReset = () => {\n    form.resetFields()\n  }\n\n  const handleOpenFilterModal = () => {\n    setVisible(true)\n    setCheckedList(renderFilterArr.map((item: any) => item.label))\n    setIndeterminate(!!renderFilterArr.length && renderFilterArr.length < filterArr.length)\n    setCheckAll(renderFilterArr.length === filterArr.length)\n  }\n\n  const handleOk = () => {\n    if (!checkedList.length) {\n      message.warning('请至少展示一个筛选项')\n      return\n    }\n    const arr: any = []\n    filterArr.forEach((filter: any) => {\n      checkedList.forEach((item: string) => {\n        if (item === filter.label) {\n          arr.push(filter)\n        }\n      })\n    })\n    setRenderFilterArr(arr)\n    setVisible(false)\n    setCheckedList([])\n    filterRender(arr)\n  }\n\n  const onCheckChange = (value: any) => {\n    setCheckedList(value)\n    setCheckAll(value.length === filterArr.length)\n    setIndeterminate(!!value.length && value.length < filterArr.length)\n  }\n\n  const onCheckAllChange = (e: any) => {\n    setCheckAll(e.target.checked)\n    setCheckedList(e.target.checked ? filterArr.map((item: any) => item.label) : filterArr.filter((item: any) => item.disabled).map((item: any) => item.label))\n    setIndeterminate(false)\n  }\n\n  const hideFilterArr: Array<any> = filterArr.filter((item: any) => item.isHide)\n\n  return (\n    <FormContainer>\n      <div style={{ marginBottom: 20, display: 'flex', justifyContent: 'flex-end' }}>\n        {hideFilterArr.length ? <span className=\"filterBtn\" onClick={handleOpenFilterModal}>自定义筛选项</span> : null}\n      </div>\n      <Modal\n        title=\"筛选\"\n        visible={visible}\n        onOk={handleOk}\n        onCancel={() => {\n          setVisible(false)\n        }}\n      >\n        <div>\n          <Checkbox\n            indeterminate={indeterminate}\n            onChange={onCheckAllChange}\n            checked={checkAll}\n          >\n            全选\n          </Checkbox>\n        </div>\n        <br />\n        <CheckboxGroup\n          value={checkedList}\n          onChange={onCheckChange}\n          style={{ width: '100%' }}\n        >\n          <Row gutter={24}>\n            {filterArr.map((item: any) => <Col style={{ marginBottom: 10 }} span={6}><Checkbox disabled={item.disabled} value={item.label}>{item.label}</Checkbox></Col>)}\n          </Row>\n        </CheckboxGroup>\n      </Modal>\n      <Form className=\"ant-advanced-search-form\" form={form} ref={props.myRef} onFinish={handleSearch} initialValues={searchParams}>\n        <FormWrapper>\n          {getFields(renderFilterArr)}\n          <FormItemWrapper floatDirection=\"right\" margin=\"0\">\n            <div style={{ textAlign: 'right' }}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                搜索\n              </Button>\n              <Button style={{ marginLeft: 8 }} onClick={handleReset}>\n                重置\n              </Button>\n            </div>\n          </FormItemWrapper>\n        </FormWrapper>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default Filter\n","import * as React from 'react'\nimport { Fragment } from 'react'\nimport { Table, Modal, Checkbox, message, Row, Col } from 'antd'\nimport Filter from './Filter/index'\nimport { Iprops } from './interface'\nimport styled from 'styled-components';\nimport { cloneDeep } from 'lodash';\n\nconst CheckboxGroup = Checkbox.Group;\nconst { useState, useEffect } = React;\n\nconst StyledContainer = styled.div`\n  .title {\n    position: relative;\n    height: 40px;\n    line-height: 40px;\n    background: #fff;\n    margin-top: 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    span {\n      cursor: pointer;\n      font-weight: bold;\n      font-size: 12px;\n      color: #00a0e9;\n    }\n  }\n`;\n\nconst ListTemplate: React.FC<Iprops> = (props: Iprops) => {\n  const {\n    filterArr,\n    columns,\n    isShowExport,\n    handleExport,\n    loading,\n    dataSource,\n    getFilter,\n    getPagination,\n    rowKey,\n    searchParams,\n    pagination\n  } = props\n\n  const hideColumnsArr: Array<any> = columns.filter((item: any) => item.isHide)\n  const [renderColumns, setRenderColumns] = useState<Array<any>>(columns)\n  const [visible, setVisible] = useState<boolean>(false)\n  const [checkedList, setCheckedList] = useState<Array<string>>([])\n  const [checkAll, setCheckAll] = useState<boolean>(false)\n  const [indeterminate, setIndeterminate] = useState<boolean>(false)\n\n  useEffect(() => {\n    setRenderColumns(cloneDeep(columns).filter((item: any) => !item.isHide))\n  }, [columns])\n\n  const handleOpenFilterModal = () => {\n    setVisible(true)\n    setCheckedList(renderColumns.map((item: any) => item.title))\n    setIndeterminate(!!renderColumns.length && renderColumns.length < columns.length)\n    setCheckAll(renderColumns.length === columns.length)\n  }\n\n  const handleOk = () => {\n    if (!checkedList.length) {\n      message.warning('请至少选择一个')\n      return\n    }\n    const arr: any = []\n    columns.forEach((column: any) => {\n      checkedList.forEach((item: string) => {\n        if (item === column.title) {\n          arr.push(column)\n        }\n      })\n    })\n    setRenderColumns(arr)\n    setVisible(false)\n    setCheckedList([])\n  }\n\n  const onCheckChange = (value: any) => {\n    setCheckedList(value)\n    setCheckAll(value.length === columns.length)\n    setIndeterminate(!!value.length && value.length < columns.length)\n  }\n\n  const onCheckAllChange = (e: any) => {\n    setCheckAll(e.target.checked)\n    setCheckedList(e.target.checked ? columns.map((item: any) => item.title) : columns.filter((item: any) => item.disabled).map((item: any) => item.title))\n    setIndeterminate(false)\n  }\n\n  const tableChange = (pagination: any) => {\n    getPagination({ current: pagination.current, pageSize: pagination.pageSize, total: pagination.total})\n  }\n\n  const onSearch = (params: any) => {\n    getFilter(params)\n  }\n\n  // 获取Filter是否变化\n  const getFilterRender = (renderFilterArr: any) => {\n    // 筛选项有的，表格必须有\n    const copyRenderColumns = cloneDeep(renderColumns)\n    const columnsKey = copyRenderColumns.filter((column: any) => column.key).map((column: any) => column.key)\n    renderFilterArr.forEach((item: any) => {\n      if (!columnsKey.includes(item.name)) {\n        const column = columns.filter((column: any) => column.key === item.name)[0]\n        column && copyRenderColumns.push(column)\n      }\n    })\n    const arr: any = []\n    columns.forEach((column: any) => {\n      copyRenderColumns.forEach((item: any) => {\n        if (item.key === column.key) {\n          arr.push(column)\n        }\n      })\n    })\n    setRenderColumns(arr)\n  }\n\n  return (\n    <Fragment>\n      <Filter\n        filterArr={filterArr} // 表单配置\n        onSearch={onSearch}\n        filterRender={getFilterRender}\n        myRef={props.myRef}\n        searchParams={searchParams}\n      />\n      <StyledContainer>\n        <div className=\"title\">\n          {hideColumnsArr.length ? <span onClick={handleOpenFilterModal}>自定义展示项</span> : null}\n          {isShowExport && <span className=\"export\" onClick={handleExport}>\n            导出\n          </span>}\n        </div>\n        <Table\n          bordered\n          columns={renderColumns}\n          pagination={pagination}\n          dataSource={dataSource}\n          onChange={tableChange}\n          loading={loading}\n          rowKey={rowKey}\n        />\n      </StyledContainer>\n      <Modal\n        title=\"筛选\"\n        visible={visible}\n        onOk={handleOk}\n        onCancel={() => {\n          setVisible(false)\n        }}\n      >\n        <div>\n          <Checkbox\n            indeterminate={indeterminate}\n            onChange={onCheckAllChange}\n            checked={checkAll}\n          >\n            全选\n            </Checkbox>\n        </div>\n        <br />\n        <CheckboxGroup\n          value={checkedList}\n          onChange={onCheckChange}\n          style={{ width: '100%' }}\n        >\n          <Row gutter={24}>\n            {columns.map((item: any) => <Col style={{ marginBottom: 10 }} span={6}><Checkbox disabled={item.disabled} value={item.title}>{item.title}</Checkbox></Col>)}\n          </Row>\n        </CheckboxGroup>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default ListTemplate\n","import * as React from 'react';\nimport moment from 'moment';\nimport ListTemplate from '@components/ListTemplate';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateSearchParams, updatePagination, updateTableData, selectOrderData } from './orderSlice';\n\n\nconst { useState, useEffect, useMemo, useRef } = React;\n\ninterface IProps { }\n\nconst OrderManage = (props: IProps) => {\n  const [filterArr, setFilterArr] = useState<any>([])\n  const myRef = useRef<any>(null)\n  const orderData = useSelector(selectOrderData)\n  const dispatch = useDispatch();\n  const { tableData, searchParams, pagination } = orderData\n\n  useEffect(() => {\n    const arr = [\n      {\n        label: \"订单号\",\n        name: \"order_no\",\n        type: \"Input\",\n        placeholder: \"请输入订单号\",\n        disabled: true,\n        initialValue: ''\n      },\n      {\n        label: \"创建日期\",\n        name: \"create_time\",\n        type: \"DatePicker\",\n        placeholder: \"请选择创建日期\",\n        disabled: true,\n        initialValue: '',\n      },\n      {\n        label: \"日期范围\",\n        name: 'order_date',\n        filterName: ['order_start_date', 'order_end_date'],\n        type: \"RangePicker\",\n        placeholder: \"\",\n        disabled: true,\n        initialValue: '',\n      },\n      {\n        label: \"地址\",\n        name: \"address\",\n        type: \"Input\",\n        placeholder: \"请输入地址\",\n        isHide: true,\n        initialValue: ''\n      },\n    ];\n    setFilterArr(arr)\n  }, [])\n\n  const columns = useMemo(() => [\n    {\n      title: '订单号',\n      dataIndex: 'order_no',\n      key: 'order_no',\n      width: 250,\n      disabled: true\n    },\n    {\n      title: '创建日期',\n      dataIndex: 'create_time',\n      key: 'create_time',\n      width: 150,\n      disabled: true\n    },\n    {\n      title: '日期范围',\n      dataIndex: 'order_date',\n      key: 'order_date',\n      width: 200,\n      disabled: true\n    },\n    {\n      title: '地址',\n      dataIndex: 'address',\n      key: 'address',\n      width: 150,\n      isHide: true,\n    }\n  ], [])\n\n\n  const getFilter = (params: any) => {\n    console.log(params)\n    console.log(myRef)\n    dispatch(updateSearchParams({ order_no: params.order_no, create_time: moment(params.create_time), order_date: [moment(params.order_start_date), moment(params.order_end_date)] }))\n  }\n\n  const getPagination = (pagination: any) => {\n    dispatch(updatePagination(pagination))\n    const tableData = pagination.current === 1 ? [\n      {\n        order_no: 123,\n        create_time: '2020-12-12',\n        order_date: '2020-12-12 ~ 2020-12-20',\n        address: '华龙苑南里'\n      },\n      {\n        order_no: 234,\n        create_time: '2020-12-12',\n        order_date: '2020-12-12 ~ 2020-12-20',\n        address: '华龙苑南里'\n      },\n      {\n        order_no: 345,\n        create_time: '2020-12-12',\n        order_date: '2020-12-12 ~ 2020-12-20',\n        address: '华龙苑南里'\n      },\n    ] : [\n        {\n          order_no: 456,\n          create_time: '2020-12-12',\n          order_date: '2020-12-12 ~ 2020-12-20',\n          address: '华龙苑南里'\n        },\n        {\n          order_no: 567,\n          create_time: '2020-12-12',\n          order_date: '2020-12-12 ~ 2020-12-20',\n          address: '华龙苑南里'\n        }\n      ]\n    dispatch(updateTableData(tableData))\n  }\n\n  return (\n    <div id=\"orderManage\">\n      <div>列表组件模板，点击查看<a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/zhubooooowen/React-Study#%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E6%A8%A1%E6%9D%BF\">配置详情</a></div>\n      <ListTemplate\n        filterArr={filterArr} // 筛选表单配置\n        columns={columns} // 表格 columns\n        loading={false} // 表格加载数据 loading\n        myRef={myRef}\n        rowKey=\"order_no\"\n        dataSource={tableData}\n        searchParams={searchParams}\n        pagination={pagination}\n        getFilter={getFilter} // 获取筛选数据\n        getPagination={getPagination} // 获取分页数据\n      />\n    </div>\n  );\n}\n\nexport default OrderManage"],"sourceRoot":""}